server:
  forward-headers-strategy: framework # 스프링에서 프록시 전달 헤더를 자동으로 인식하도록 설정.

spring:
  security:
    headers:
      frame-options: DISABLE
    oauth2:
      client:
        registration:
          google:
            client-id: 191095046109-t21kv1o2632n6rou7pdi26isfkvht1eb.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - profile
              - email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

  logging:
    level:
      org.springframework.security: DEBUG
      org.springframework.security.oauth2: DEBUG

  # PostgreSQL로 수정
  datasource:
    url: jdbc:postgresql://postgres:5432/team_search
    username: postgres  # 또는 원하는 사용자명
    password: your_password
    driver-class-name: org.postgresql.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        database-platform: org.hibernate.dialect.PostgreSQLDialect

  h2:
    console:
      enabled: true
      path: /h2-console



jwt:
  secret: ${JWT_SECRET_KEY:key}
  expiration: ${JWT_EXPIRATION_TIME:time} # 1시간 (ms)

front:
  url: ${FRONT_DOMAIN}  # 도메인으로 변경 필요.

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    displayRequestDuration: true
    tryItOutEnabled: true
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  writer-with-order-by-keys: true
